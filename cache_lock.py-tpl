from django.core import cache

import logging

logger = logging.getLogger(__name__)

class CacheLock():
    def __init__(self, lock_name, blocking=True):
        self.lock_name = lock_name
        self.blocking = blocking
        self.acquired = False

    def __enter__(self):
        while True:
            try:
                self.acquired = cache.add(self.lock_name, True, 60)
            except:
                logger.debug('Could not acquire lock.', exc_info=True)
                self.acquired = False
            if self.acquired or not self.blocking:
                break
        return self

    def __exit__(self, exc_type, exc_value, exc_traceback):
        if self.acquired:
            while True:
                try:
                    cache.delete(self.lock_name)
                    break
                except:
                    logger.debug('Could not release lock.', exc_info=True)
